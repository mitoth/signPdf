# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - RedactMyPdf.BurnPdfWorker/*
    - RedactMyPdf.FileHandler/*
    - aks-signmypdf.workers.burnpdf.yaml

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'd71d5758-acf0-47c0-9416-42eac94b8179'
  imageRepository: 'signmypdf.workers.burnpdf'
  containerRegistry: 'signmypdfacr.azurecr.io'
  dockerfilePath: 'RedactMyPdf.BurnPdfWorker/Dockerfile'
  tag: '$(Build.BuildId)'
  deploymentFile: 'aks-signmypdf.workers.burnpdf.yaml'
  trivyVersion: 0.12.0

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build the container image
      inputs:
        command: build
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    - script: |
        sudo apt-get install rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v$(trivyVersion)/trivy_$(trivyVersion)_Linux-64bit.deb
        sudo dpkg -i trivy_$(trivyVersion)_Linux-64bit.deb
        trivy -v
      displayName: 'Download and install Trivy'
  
    
    - script: |
        sudo docker tag $(imageRepository):$(tag) $(containerRegistry)/$(imageRepository):$(tag)
      displayName: 'Tag container image before push'
    - task: Docker@2
      displayName: Push the image to container registry
      inputs:
        command: push
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        buildContext: $(Build.SourcesDirectory)
        tags: |
          $(tag)
    
- stage: Deploy
  displayName: Deploy to k8s
  jobs:  
  - job: Deploy
    displayName: Deploy to k8s
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)'
        targetFiles: '$(deploymentFile)'
        encoding: 'auto'
        writeBOM: true
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
        useLegacyPattern: false
        enableTelemetry: true
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'SignMyPdfCluster-default'
        namespace: 'default'
        command: 'apply'
        useConfigurationFile: true
        configuration: '$(Build.SourcesDirectory)/$(deploymentFile)'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Azure Container Registry'
       # azureSubscriptionEndpointForSecrets: 'RedactSubscription1 (eb0e825f-d954-42ae-864e-d83fedb59a7e)'
        azureContainerRegistry: 'signmypdfacr.azurecr.io'